We are working on an application that will be deployed on multiple containers within a pod on Kubernetes cluster. There is a requirement to share a volume among the containers to save some temporary data. The Nautilus DevOps team is developing a similar template to replicate the scenario. Below you can find more details about it.

Create a pod named volume-share-xfusion.

For first container, use image centos with latest tag only and remember to mention tag i.e centos:latest, container should be named as volume-container-xfusion-1, and run a command '/bin/bash', '-c' and 'sleep 10000'. Volume volume-share should be mounted at path /tmp/ecommerce.

For second container, use image centos with latest tag only and remember to mention tag i.e centos:latest, container should be named as volume-container-xfusion-2, and run a command '/bin/bash', 'c' and 'sleep 10000'. Volume volume-share should be mounted at path /tmp/cluster.

Volumes to be named as volume-share and use emptyDir: { }.

After creating pods, exec into the first container volume-container-xfusion-1, and create a file ecommerce.txt with content Welcome to xFusionCorp Industries! under the mount path of first container i.e /tmp/ecommerce.

The file ecommerce.txt should be present under the mounted path /tmp/cluster of second container volume-container-xfusion-2 as they are using shared volumes.

Note: The kubectl utility on jump_host has been configured to work with the kubernetes cluster


Solution:
        
apiVersion: v1
kind: Pod
metadata:
  name: volume-share-xfusion
spec:
  volumes:
  - name: volume-share
    emptyDir: {}

  containers:
  - name: volume-container-xfusion-1
    image: centos:latest
    volumeMounts:
    - name: volume-share
      mountPath: /tmp/ecommerce
    command: ["/bin/bash","-c","sleep 10000"]

  - image: centos:latest
    name: volume-container-xfusion-2
    volumeMounts:
    - name: volume-share
      mountPath: /tmp/cluster
    command: ["/bin/sh","-c","sleep 10000"]
    
    
    
    kubectl exec -it volume-share-xfusion -c volume-container-xfusion-1 /bin/bash
    
    vi /tmp/ecommerce/ecommerce.txt
Content:  Welcome to xFusionCorp Industries!

check the second container if the file is there then your task is completed.

kubectl exec -it volume-share-xfusion -c volume-container-xfusion-2 /bin/bash

cat /tmp/cluster/ecommerce.txt
